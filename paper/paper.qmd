---
title: "Finding the True MVP"
subtitle: "An NBA Analysis Through Linear Regression"
author: 
  - Yan Mezhiborsky
thanks: "Code and data are available at: [https://github.com/Mezhi18/NBAMVP.]"
date: today
date-format: long
abstract: "This paper examines the methodology behind the NBA’s Most Valuable Player (MVP) award, introducing the MVP Index as a data-driven measure to evaluate player performance. The MVP Index combines key statistics, including points, assists, rebounds, and win shares, to provide a comprehensive metric of value. Using historical data and statistical modeling, we identify discrepancies between actual MVP winners and those with the highest MVP Index, highlighting the influence of narrative and qualitative factors on voting outcomes. The findings underscore the need for greater transparency and consistency in the MVP selection process while offering a framework for more objective evaluations."
format: pdf
number-sections: true
bibliography: references.bib
toc: true
---

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

library(tidyverse)
library(rstanarm)
library(dplyr)
library(janitor)
library(lubridate)
library(modelsummary)
library(knitr)
library(StanHeaders)
library(kableExtra)

```

# Introduction {#sec-intro}

Basketball’s Most Valuable Player (MVP) award represents one of the most prestigious accolades in professional sports, honoring the individual deemed to have contributed the most to their team’s success over a season. While the selection process has traditionally relied on expert voting and narrative-driven narratives, the question of whether the MVP truly reflects a player's value remains open to debate. This paper seeks to address this issue by evaluating the award through a data-driven lens, introducing the MVP Index as a novel measure of player impact. By exploring historical trends, inconsistencies, and predictive modeling, this research aims to shed light on how MVP selections align—or fail to align—with statistical measures of excellence.

At the heart of this analysis is the estimand, the MVP Index, which combines key player performance metrics into a single, normalized statistic. This index incorporates points, assists, rebounds, blocks, steals, and win shares, weighted to reflect their relative importance. The MVP Index provides a quantitative foundation for evaluating player performance, offering an alternative to the sometimes subjective criteria that influence MVP voting. The study employs statistical modeling, with linear regression used to predict the MVP Index for future seasons, enabling a comparison between the players with the best statistical performance and those who ultimately win the award.

The results of the analysis reveal several significant insights. In some seasons, the MVP Index aligns closely with the actual MVP winner, validating the selection process. However, there are also notable discrepancies, where players with superior statistical performances were overlooked in favor of candidates with compelling narratives or team success factors. These findings suggest that while data can provide clarity, the MVP award is often shaped by qualitative elements that extend beyond pure statistics.

Understanding these patterns is not only critical for fans and analysts but also holds implications for broader debates about transparency and fairness in sports. The MVP award significantly impacts player legacies, influencing Hall of Fame considerations, sponsorship deals, and even contract negotiations. A more robust and transparent framework for assessing MVP candidates could enhance the credibility of the award and ensure that it reflects the contributions of players who truly make a difference.

The remainder of this paper is structured as follows. @sec-data outlines the data sources, variables and processing steps that were use to help construct our very own `MVP Index`. Next, @sec-model  talks about our model and how it was developped as well as how we are using it to predict the future statistics. Then, @sec-results, we analyze MVP statistics over that nearly 40 years and how they have changed over time and highlights important discrepancies between our model and past MVPs. Lastly, @sec-discussion discusses the broader implications of these findings and acknowledges the paper's limitations. 

# Data {#sec-data}

## Overview

We use the statistical programming language R [@citeR], as well as the following packages to help clean and manipulate our data, [@tidyverse], [@rstanarm], [@dplyr], [@janitor], [@lubridate], [@modelsummary], [@knitr], [@StanHeaders], [@kableExtra]. Using these packages we cleaned our data, added years for the data sets that only had seasons, referring to the basketball season, as well as helped create some nice tables, unlike the traditional R software can create.

Our data was collected from [@bbref], we collected data from every player that received a vote for any All-NBA teams since 1986, this includes a vote cast for the First All-NBA Team, the Second All-NBA Team, and the Third All-NBA Team. As we believed that taking the players that received votes for the MVP awards would result in a smaller sample. We also created a new statistic call `MVP_Index` that will be defined in @sec-variables. In addition, we collected a data set for all NBA MVPs since 1986, so we could compare to the ones we have chosen with the `MVP_Index`.

Following @tellingstories, we use techniques and methods from this text we have analyzed the data using models, graphs, tables and other methods of data analysis to conduct our research to find  players that could have been MVPs and what the MVP for the following years will look like(statistically). 


## Variables {#sec-variables}

### All NBA Variables

As we collected data from each year since 1986 individually, we have utilized the following variables:

-   `Team:` Whether the player was in the 1st, 2nd, or 3rd All NBA Teams or OVR if they did not make the top three teams but still received a vote.
-   `Pos:` The player's position including the generalized positions G, F, C, for Guard, Forward, and Center respectively.
-   `Player:` The name of the NBA player.
-   `Age:` The age of the NBA player.
-   `Tm:` The three letter designation for the NBA team the player played for the year.
-   `G:` Games played by the player.
-   `MP:` Minutes played per game.
-   `PTS:` Points per game.
-   `TRB:` Total Rebounds per game, including offensive and defensive rebounds.
-   `BLK:` Blocks per game
-   `STL:` Steals Per game
-   `WS:` The amount of wins allocated to the individual player

As each year has an individual data set we took PTS, TRB, AST, BLK, STL,a nd WS took the average for that year and normalized each player's statistics by dividing them by the average of that year with this we have created the MVP Index which we have defined as:

$$MVP_{Index} = 0.8PTS_{Norm} + 0.25AST_{Norm} + 0.25TRB_{Norm} + 0.1STL_{Norm} + 0.1BLK_{Norm} + 0.15WS_{Norm}$$

With this `MVP Index` we have created our own list of who could have been MVP base on statistics for that year, essentially comparing how good the player was to othe rplayers in the basketball season.

### Historical MVP Variable

For our second set of date we have all MVPs since 1986 also sourced from [@bbref], and the variables that have been used are the following:

-   `Player:` The name of the NBA player.
-   `Year:` The year in which the player was selected as MVP.
-   `Tm:` The three letter designation for the NBA team the player played for the year.
-   `G:` Games played by the player.
-   `MP:` Minutes played per game.
-   `PTS:` Points per game.
-   `TRB:` Total Rebounds per game, including offensive and defensive rebounds.
-   `BLK:` Blocks per game
-   `STL:` Steals Per game
-   `WS:` The amount of wins allocated to the individual player

## Measurement

Data collected in sports and more specifically basketball is rather simple. When an NBA game is being played there are people who's entire job is to keep track of a players statistics throughout the game, whenever a player makes a shot, or steals they ball it is being logged by that specific person. After the standard 82 games, there could be morte or less under different circumstances such ast COVID-19, injuries, or even trades all regular season statistics have been collected. As most of our in game statistics are based on the players 'per game' average, the total number of points blocks, etc., are recorded it is divided by the number of games the player played that season.

## Outcome variable: MVP Index

Our outcome variable is the same as our estimand in @sec-intro. As `MVP Index` is dependent on our other statistics, Points, Assists, Rebounds, Steals, Blocks, and Win Shares. As we are studying MVPs in our paper this is our Variable of interest ast it represents how good a player was in comparison to the other best players in the NBA that year, from the sample of players that have received any ALL NBA Team vote. 



```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false


# 1986
NBA1986 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1986.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1986[2, ]))
NBA1986 <- NBA1986[-c(1, 2), ]
colnames(NBA1986) <- new_col_names
NBA1986[] <- lapply(NBA1986, type.convert, as.is = TRUE)

# 1987
NBA1987 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1987.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1987[2, ]))
NBA1987 <- NBA1987[-c(1, 2), ]
colnames(NBA1987) <- new_col_names
NBA1987[] <- lapply(NBA1987, type.convert, as.is = TRUE)

# 1988
NBA1988 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1988.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1988[2, ]))
NBA1988 <- NBA1988[-c(1, 2), ]
colnames(NBA1988) <- new_col_names
NBA1988[] <- lapply(NBA1988, type.convert, as.is = TRUE)

# 1989
NBA1989 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1989.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1989[2, ]))
NBA1989 <- NBA1989[-c(1, 2), ]
colnames(NBA1989) <- new_col_names
NBA1989[] <- lapply(NBA1989, type.convert, as.is = TRUE)

# 1990
NBA1990 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1990.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1990[2, ]))
NBA1990 <- NBA1990[-c(1, 2), ]
colnames(NBA1990) <- new_col_names
NBA1990[] <- lapply(NBA1990, type.convert, as.is = TRUE)

# 1991
NBA1991 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1991.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1991[2, ]))
NBA1991 <- NBA1991[-c(1, 2), ]
colnames(NBA1991) <- new_col_names
NBA1991[] <- lapply(NBA1991, type.convert, as.is = TRUE)

# 1992
NBA1992 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1992.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1992[2, ]))
NBA1992 <- NBA1992[-c(1, 2), ]
colnames(NBA1992) <- new_col_names
NBA1992[] <- lapply(NBA1992, type.convert, as.is = TRUE)

# 1993
NBA1993 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1993.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1993[2, ]))
NBA1993 <- NBA1993[-c(1, 2), ]
colnames(NBA1993) <- new_col_names
NBA1993[] <- lapply(NBA1993, type.convert, as.is = TRUE)

# 1994
NBA1994 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1994.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1994[2, ]))
NBA1994 <- NBA1994[-c(1, 2), ]
colnames(NBA1994) <- new_col_names
NBA1994[] <- lapply(NBA1994, type.convert, as.is = TRUE)

# 1995
NBA1995 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1995.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1995[2, ]))
NBA1995 <- NBA1995[-c(1, 2), ]
colnames(NBA1995) <- new_col_names
NBA1995[] <- lapply(NBA1995, type.convert, as.is = TRUE)

# 1996
NBA1996 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1996.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1996[2, ]))
NBA1996 <- NBA1996[-c(1, 2), ]
colnames(NBA1996) <- new_col_names
NBA1996[] <- lapply(NBA1996, type.convert, as.is = TRUE)

# 1997
NBA1997 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1997.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1997[2, ]))
NBA1997 <- NBA1997[-c(1, 2), ]
colnames(NBA1997) <- new_col_names
NBA1997[] <- lapply(NBA1997, type.convert, as.is = TRUE)

# 1998
NBA1998 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1998.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1998[2, ]))
NBA1998 <- NBA1998[-c(1, 2), ]
colnames(NBA1998) <- new_col_names
NBA1998[] <- lapply(NBA1998, type.convert, as.is = TRUE)

# 1999
NBA1999 <- read.csv("../data/01-raw_data/All NBA/AllNBA_1999.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA1999[2, ]))
NBA1999 <- NBA1999[-c(1, 2), ]
colnames(NBA1999) <- new_col_names
NBA1999[] <- lapply(NBA1999, type.convert, as.is = TRUE)

# 2000
NBA2000 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2000.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2000[2, ]))
NBA2000 <- NBA2000[-c(1, 2), ]
colnames(NBA2000) <- new_col_names
NBA2000[] <- lapply(NBA2000, type.convert, as.is = TRUE)

# 2001
NBA2001 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2001.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2001[2, ]))
NBA2001 <- NBA2001[-c(1, 2), ]
colnames(NBA2001) <- new_col_names
NBA2001[] <- lapply(NBA2001, type.convert, as.is = TRUE)

# 2002
NBA2002 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2002.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2002[2, ]))
NBA2002 <- NBA2002[-c(1, 2), ]
colnames(NBA2002) <- new_col_names
NBA2002[] <- lapply(NBA2002, type.convert, as.is = TRUE)

# 2003
NBA2003 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2003.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2003[2, ]))
NBA2003 <- NBA2003[-c(1, 2), ]
colnames(NBA2003) <- new_col_names
NBA2003[] <- lapply(NBA2003, type.convert, as.is = TRUE)

# 2004
NBA2004 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2004.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2004[2, ]))
NBA2004 <- NBA2004[-c(1, 2), ]
colnames(NBA2004) <- new_col_names
NBA2004[] <- lapply(NBA2004, type.convert, as.is = TRUE)

# 2005
NBA2005 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2005.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2005[2, ]))
NBA2005 <- NBA2005[-c(1, 2), ]
colnames(NBA2005) <- new_col_names
NBA2005[] <- lapply(NBA2005, type.convert, as.is = TRUE)

# 2006
NBA2006 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2006.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2006[2, ]))
NBA2006 <- NBA2006[-c(1, 2), ]
colnames(NBA2006) <- new_col_names
NBA2006[] <- lapply(NBA2006, type.convert, as.is = TRUE)

# 2007
NBA2007 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2007.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2007[2, ]))
NBA2007 <- NBA2007[-c(1, 2), ]
colnames(NBA2007) <- new_col_names
NBA2007[] <- lapply(NBA2007, type.convert, as.is = TRUE)

# 2008
NBA2008 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2008.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2008[2, ]))
NBA2008 <- NBA2008[-c(1, 2), ]
colnames(NBA2008) <- new_col_names
NBA2008[] <- lapply(NBA2008, type.convert, as.is = TRUE)

# 2009
NBA2009 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2009.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2009[2, ]))
NBA2009 <- NBA2009[-c(1, 2), ]
colnames(NBA2009) <- new_col_names
NBA2009[] <- lapply(NBA2009, type.convert, as.is = TRUE)

# 2010
NBA2010 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2010.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2010[2, ]))
NBA2010 <- NBA2010[-c(1, 2), ]
colnames(NBA2010) <- new_col_names
NBA2010[] <- lapply(NBA2010, type.convert, as.is = TRUE)

# 2011
NBA2011 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2011.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2011[2, ]))
NBA2011 <- NBA2011[-c(1, 2), ]
colnames(NBA2011) <- new_col_names
NBA2011[] <- lapply(NBA2011, type.convert, as.is = TRUE)

# 2012
NBA2012 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2012.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2012[2, ]))
NBA2012 <- NBA2012[-c(1, 2), ]
colnames(NBA2012) <- new_col_names
NBA2012[] <- lapply(NBA2012, type.convert, as.is = TRUE)

# 2013
NBA2013 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2013.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2013[2, ]))
NBA2013 <- NBA2013[-c(1, 2), ]
colnames(NBA2013) <- new_col_names
NBA2013[] <- lapply(NBA2013, type.convert, as.is = TRUE)

# 2014
NBA2014 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2014.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2014[2, ]))
NBA2014 <- NBA2014[-c(1, 2), ]
colnames(NBA2014) <- new_col_names
NBA2014[] <- lapply(NBA2014, type.convert, as.is = TRUE)

# 2015
NBA2015 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2015.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2015[2, ]))
NBA2015 <- NBA2015[-c(1, 2), ]
colnames(NBA2015) <- new_col_names
NBA2015[] <- lapply(NBA2015, type.convert, as.is = TRUE)

# 2016
NBA2016 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2016.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2016[2, ]))
NBA2016 <- NBA2016[-c(1, 2), ]
colnames(NBA2016) <- new_col_names
NBA2016[] <- lapply(NBA2016, type.convert, as.is = TRUE)

# 2017
NBA2017 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2017.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2017[2, ]))
NBA2017 <- NBA2017[-c(1, 2), ]
colnames(NBA2017) <- new_col_names
NBA2017[] <- lapply(NBA2017, type.convert, as.is = TRUE)

# 2018
NBA2018 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2018.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2018[2, ]))
NBA2018 <- NBA2018[-c(1, 2), ]
colnames(NBA2018) <- new_col_names
NBA2018[] <- lapply(NBA2018, type.convert, as.is = TRUE)

# 2019
NBA2019 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2019.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2019[2, ]))
NBA2019 <- NBA2019[-c(1, 2), ]
colnames(NBA2019) <- new_col_names
NBA2019[] <- lapply(NBA2019, type.convert, as.is = TRUE)

# 2020
NBA2020 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2020.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2020[2, ]))
NBA2020 <- NBA2020[-c(1, 2), ]
colnames(NBA2020) <- new_col_names
NBA2020[] <- lapply(NBA2020, type.convert, as.is = TRUE)

# 2021
NBA2021 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2021.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2021[2, ]))
NBA2021 <- NBA2021[-c(1, 2), ]
colnames(NBA2021) <- new_col_names
NBA2021[] <- lapply(NBA2021, type.convert, as.is = TRUE)

# 2022
NBA2022 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2022.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2022[2, ]))
NBA2022 <- NBA2022[-c(1, 2), ]
colnames(NBA2022) <- new_col_names
NBA2022[] <- lapply(NBA2022, type.convert, as.is = TRUE)

# 2023
NBA2023 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2023.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2023[2, ]))
NBA2023 <- NBA2023[-c(1, 2), ]
colnames(NBA2023) <- new_col_names
NBA2023[] <- lapply(NBA2023, type.convert, as.is = TRUE)

# 2024
NBA2024 <- read.csv("../data/01-raw_data/All NBA/AllNBA_2024.csv", header = FALSE)
new_col_names <- as.character(unlist(NBA2024[2, ]))
NBA2024 <- NBA2024[-c(1, 2), ]
colnames(NBA2024) <- new_col_names
NBA2024[] <- lapply(NBA2024, type.convert, as.is = TRUE)
```

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false


Real_MVP_Data <- read.csv("../data/01-raw_data/NBA MVPs/Real_MVP_Data.csv")


```


```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false


# Years range
years <- 1986:2024

# Normalize columns and calculate MVP index with WS
for (year in years) {
  dataset_name <- paste0("NBA", year)
  dataset <- get(dataset_name)
  
  if (all(c("PTS", "AST", "TRB", "STL", "BLK", "WS") %in% colnames(dataset))) {
    averages <- colMeans(dataset[c("PTS", "AST", "TRB", "STL", "BLK", "WS")], na.rm = TRUE)
    
    dataset$avg_PTS <- averages["PTS"]
    dataset$avg_AST <- averages["AST"]
    dataset$avg_TRB <- averages["TRB"]
    dataset$avg_STL <- averages["STL"]
    dataset$avg_BLK <- averages["BLK"]
    dataset$avg_WS <- averages["WS"]
    
    dataset$norm_PTS <- dataset$PTS / dataset$avg_PTS
    dataset$norm_AST <- dataset$AST / dataset$avg_AST
    dataset$norm_TRB <- dataset$TRB / dataset$avg_TRB
    dataset$norm_STL <- dataset$STL / dataset$avg_STL
    dataset$norm_BLK <- dataset$BLK / dataset$avg_BLK
    dataset$norm_WS <- dataset$WS / dataset$avg_WS
    
    dataset$MVP_index <- 0.8 * dataset$norm_PTS +
                         0.25 * dataset$norm_AST +
                         0.25 * dataset$norm_TRB +
                         0.1 * dataset$norm_BLK +
                         0.1 * dataset$norm_STL +
                         0.15 * dataset$norm_WS
    
    assign(dataset_name, dataset)
  } else {
    stop(paste0("One or more required columns (PTS, AST, TRB, STL, BLK, WS) are missing in dataset for year ", year))
  }
}

# Create a table of the player with the highest MVP index for each year
mvp_table <- data.frame(Year = integer(), Player = character(), MVP_index = numeric(), 
                        PTS = numeric(), AST = numeric(), TRB = numeric(), 
                        BLK = numeric(), STL = numeric(), WS = numeric(), 
                        stringsAsFactors = FALSE)

# Iterate over each year to find the top player
for (year in years) {
  dataset_name <- paste0("NBA", year)
  dataset <- get(dataset_name)
  
  if ("MVP_index" %in% colnames(dataset)) {
    max_row <- dataset[which.max(dataset$MVP_index), ]
    
    mvp_entry <- data.frame(
      Year = year, 
      Player = max_row$Player, 
      MVP_index = max_row$MVP_index,
      PTS = max_row$PTS,
      AST = max_row$AST,
      TRB = max_row$TRB,
      BLK = max_row$BLK,
      STL = max_row$STL,
      WS = max_row$WS,
      stringsAsFactors = FALSE
    )
    
    mvp_table <- rbind(mvp_table, mvp_entry)
  } else {
    stop(paste0("MVP_index column is missing in dataset for year ", year))
  }
}

write.csv(mvp_table, "../data/02-analysis_data/mvp_table.csv", row.names = FALSE)

nba_list <- list()

for (year in years) {
  dataset_name <- paste0("NBA", year)
  dataset <- get(dataset_name)
  dataset$Year <- year
  nba_list[[as.character(year)]] <- dataset
}

nba_master <- do.call(rbind, nba_list)
write.csv(nba_master, "../data/02-analysis_data/nba_master.csv", row.names = FALSE)

merged_real_mvp <- merge(
  Real_MVP_Data, 
  nba_master[, c("Player", "Age", "MVP_index")],  # Select only relevant columns from nba_master
  by = c("Player", "Age"), 
  all.x = TRUE
)

merged_real_mvp <- merged_real_mvp %>%
  mutate(
    Year = case_when(
      grepl("^\\d{4}-\\d{2}$", Season) ~ as.numeric(substr(Season, 1, 4)) + 1,
      grepl("^[a-zA-Z]{3}-\\d{2}$", Season) ~ as.numeric(paste0("20", substr(Season, 5, 6))) + 1,
      TRUE ~ NA_real_
    )
  )

# Convert Year column to numeric
merged_real_mvp$Year <- as.numeric(merged_real_mvp$Year)



```


# Model {#sec-model}

The goal of our modelling strategy is twofold. Firstly, we will be using a linear regression model to predict the MVP Index of the mvp in the following year regardless of the player. This will tell us how much better we can expect the 2025 MVP to be compared to his fellow NBA players. Secondly, We will use another data set we have created by selecting players that had the highest MVP index in their respective year whether they had won MVP or not. So, Using both these predictions we will be able to compare whether we believe the player with the highest MVP index will in fact be the next NBA MVP.

Here we briefly describe the Linear analysis model used to investigate what the MVP Index of the next NBA MVP will be. For our model we will use collected data describe in @sec-data.

Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the MVP Index. Then $\pi_i$ as the points per game, then $\alpha_i$ as assists per game, next we have $\rho_i$ as rebounds per game. Furthermore, we have $\beta_i$ as blocks per game, then we have $\xi_i$ for steals per game, lastly we have $\omega_i$ for win shares. With these variables we will be predicting the MVP Index for the following NBA season.

\begin{align}
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \pi_i + \alpha_i + \rho_i + \beta_i + \xi_i + \omega_i \\
\pi &\sim \mbox{Normal}(0, 2.5) \\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\rho &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\xi &\sim \mbox{Normal}(0, 2.5) \\
\omega &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}





```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

# create a linear regression model
lm_model <- lm(MVP_index ~ PTS + AST + TRB + BLK + STL + WS, data = nba_master)

# View the summary of the model
summary(lm_model)

next_year_mvp_stats <- mvp_table %>%
  filter(Year == 2024) %>%  # Replace with the target year
  select(PTS, AST, TRB, BLK, STL, WS)

# Predict MVP_index for the next year's MVP
predicted_index_mvp_table <- predict(lm_model, newdata = next_year_mvp_stats)
print(paste("Predicted MVP Index (mvp_table):", predicted_index_mvp_table))

next_year_real_mvp_stats <- merged_real_mvp %>%
  filter(Year == 2024) %>%  # Replace with the target year
  select(PTS, AST, TRB, BLK, STL, WS)

# Predict MVP_index for the next year's MVP
predicted_index_real_mvp <- predict(lm_model, newdata = next_year_real_mvp_stats)

saveRDS(lm_model, "../models/lm_model.rds")
```

### Model justification

We expect a positive relationship between Between MVP Index and points, assists, rebounds, block, steals and win shares, as as these are all variables that define the MVP Index. In addition we expect a positive relationship as all of these statitcs indicate a good player, the larger anyone of these stats stats are the larger the MVP Index will be for the respective player. Just because a player does not aquire many block or many asists does not mean a player will have a low MVP rating, this just mean they will have to compensate with their other stats. we can also see in @sec-model-details that we have a p-value of less than $2.2 \times 10^{-16}$, which is very low and gives us confidence the the model is accurate.

### Model Results

Below we can see @tbl-modelresults where we can see the MVPs from the last 10 years, including an additional unknown MVP with a projected MVP Index score. For this table we used both Historical Data with past MVP winners as well as data we have created on our own. The data we have created includes players that have had the highest MVP Index within their respective year, so not necessarily the same player that truly won the MVP Award that year. As we can see the historical data predicts a player to have an MVP index of 2.40 while our data suggests that the Player with the highest MVP index will be 2.45, as such it is very likely that the player with the highest MVP Index will not be the player selected for the MVP award. As with the 2024 season the player awarded with the MVP award was Nikola Jokic with an MVP Index score of 2.16, while Luka Doncic another player well deserving of the MVP Award and was in the race to win the award has a score of 2.20 which is in fact higher than Nikola Jokic's.


```{r}
#| echo: false
#| warning: false
#| message: false
#| label: tbl-modelresults
#| fig-cap: "Historical MVP and Player with highest MVP Index since 2014"

# Filter MVPs from 2014 to 2024 for both datasets
mvp_table_filtered <- mvp_table %>%
  filter(Year >= 2014 & Year <= 2024) %>%
  select(Year, Player, MVP_index)

real_mvp_filtered <- merged_real_mvp %>%
  filter(Year >= 2014 & Year <= 2024) %>%
  select(Year, Player, MVP_index)

# Predict MVP index for 2025 and add it to both tables
next_year_mvp_stats <- mvp_table %>%
  filter(Year == 2024) %>%  # Use 2024 stats as proxy
  select(PTS, AST, TRB, BLK, STL, WS)

predicted_index_mvp_table <- NA
if (nrow(next_year_mvp_stats) > 0) {
  predicted_index_mvp_table <- predict(lm_model, newdata = next_year_mvp_stats)
}

mvp_table_filtered <- bind_rows(
  mvp_table_filtered,
  data.frame(
    Year = 2025,
    Player = "Predicted MVP",
    MVP_index = predicted_index_mvp_table
  )
)

next_year_real_mvp_stats <- merged_real_mvp %>%
  filter(Year == 2024) %>%  # Use 2024 stats as proxy
  select(PTS, AST, TRB, BLK, STL, WS)

predicted_index_real_mvp <- NA
if (nrow(next_year_real_mvp_stats) > 0) {
  predicted_index_real_mvp <- predict(lm_model, newdata = next_year_real_mvp_stats)
}

real_mvp_filtered <- bind_rows(
  real_mvp_filtered,
  data.frame(
    Year = 2025,
    Player = "Predicted MVP",
    MVP_index = predicted_index_real_mvp
  )
)

# Rename columns for clarity
mvp_table_filtered <- mvp_table_filtered %>%
  rename(
    `Simulated Data - Player` = Player,
    `Simulated Data - MVP Index` = MVP_index
  )

real_mvp_filtered <- real_mvp_filtered %>%
  rename(
    `Historical Data - Player` = Player,
    `Historical Data - MVP Index` = MVP_index
  )

# Join the two tables by Year
combined_table <- full_join(
  mvp_table_filtered,
  real_mvp_filtered,
  by = "Year"
)


print(combined_table)



```
As we have learned from @tbl-modelresults and which we can see in @sec-index it is obvious that the MVP is not always the player that performs the best statistically, as LeBron James would have won 8 MVP awards before entering the 2013-2014 season, which would be 8 MVP awards in 10 years. Therefore, there must other factors excluding the statistics we were looking at, such as human error or prejudice, team success, and overall story telling which we will look further into in @sec-discussion.

# Results {#sec-results}

In this section we will be taking a look at some statistics since 1986, starting with MVP index, the moving on to PPG, the RPG, and lastly we will look at APG. In these graphs we will be looking at Historical MVPs as well as players from each year with the highest MVP index. Analyzing these graphs will help us will help us understand how these stats developped through time among the best of the best in the NBA and potentially which statistics are valued more in real life than in the real MVP race.

## MVP Index Since 1986 {#sec-mvp-index}

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-mvpindex
#| fig-cap: "MVP index of of Historical and simulated MVPs"

merged_data <- bind_rows(
  merged_real_mvp %>% mutate(Source = "Historical MVPs"),
  mvp_table %>% mutate(Source = "Simulated MVPs")
)

# Create the faceted plot with lines connecting points
ggplot(merged_data, aes(x = Year, y = MVP_index, group = Source)) +
  geom_line(aes(color = Source), size = 1, alpha = 0.7) +  # Add lines connecting points
  geom_point(aes(color = Source), size = 3, alpha = 0.7) +  # Keep the points
  facet_wrap(~ Source, ncol = 2) +  # Facet by the Source column, side by side
  labs(
    title = "Scatter: Year vs. MVP Index",
    x = "Year",
    y = "MVP Index"
  ) +
  coord_cartesian(ylim = c(1.7, 2.8)) +  # Maintain the same y-axis range
  theme_minimal() +
  theme(
    legend.position = "none",  # Remove the legend since it's redundant with faceting
    strip.text = element_text(size = 12, face = "bold")
  )


```
In @fig-mvpindex we see that both graphs seem to bounce around a lot until we reach the 2020s where both seem to converge at around an MVP Index score of 2.2. This could mean several things the MVPs are getting worse which is incredibly unlikely and we do not believe that this is the case, another possibility is that the competition is getting better and more consistent. We must remember that the MVP index relies just as much on all the other players in the data set as much as it relies on the player who's MVP Index we are looking at. If we look at the 2004-05 and the 2005-06 seasons we can see a large dip in historical MVPs, this can be attributed to Phoenix Suns' point guard Steve Nash, as he was not even in the top 10 of MVP index with two teammate Amar'e Stoudemire and Shawn Marion two of Nash's teammates both ahve a higher Index than Nash. Although these are some of the most contentious MVP selections in the past 20 years, it must be considered what NBA analysts saw in him, as his team did have success, although falling short of the championship, and he was a great leader both on and off the court, as a floor general and a mentor. The question still remains did Nash deserve those MVPs? And is the Selection process for choosing an MVP flawed?


## PPG since 1986

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-pts
#| fig-cap: "MVP PPG over Time"

# Add a source column to the datasets
mvp_table <- mvp_table %>%
  mutate(Source = "Simulated MVPs")

merged_real_mvp <- merged_real_mvp %>%
  mutate(Source = "Historical MVPs")

# Combine datasets
combined_data <- bind_rows(
  mvp_table %>% select(Year, PTS, TRB, AST, Source),
  merged_real_mvp %>% select(Year, PTS, TRB, AST, Source)
)

# Plot for PTS
pts_plot <- ggplot(combined_data, aes(x = Year, y = PTS, group = Source, color = Source)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_line(alpha = 0.7) +
  facet_wrap(~ Source) +
  labs(
    x = "Year",
    y = "PTS"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

# Plot for TRB
trb_plot <- ggplot(combined_data, aes(x = Year, y = TRB, group = Source, color = Source)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_line(alpha = 0.7) +
  facet_wrap(~ Source) +
  labs(
    x = "Year",
    y = "TRB"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

# Plot for AST
ast_plot <- ggplot(combined_data, aes(x = Year, y = AST, group = Source, color = Source)) +
  geom_point(size = 3, alpha = 0.7) +
  geom_line(alpha = 0.7) +
  facet_wrap(~ Source) +
  labs(
    x = "Year",
    y = "AST"
  ) +
  theme_minimal() +
  theme(legend.position = "none")

# Display plots separately
print(pts_plot)




```

We will no be looking at @fig-pts where we are looking at MVP's points per game through the years. As this graph is similar to @fig-mvpindex in the sense that then numbers do seem to be bouncing around although here we see that they do not seem to be converging around a single point. Although in this grapgh we see something interesting as well, Both Simulated MVs and Historical MVPs there seems to be an increasing baseline as well as an increasing top line, while the points are bouncing up and down through the years there along the top data points and the bottom data points, excluding Steve Nash, the only player to win MVP while scoring under 20ppg since 1986, who we discussed in @sec-mvp-index. The interesting thing is that this occurs in both graphs, this tells us that as the years go on the points scored by MVPs, even those who tend to score less are increasing this can be confirmed in a the paper [@yan].




## RPG since 1986

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-reb
#| fig-cap: "MVP RPG over Time"

print(trb_plot)
```
In @fig-reb we are considering at rebounds per game. This gives us some additional information on the type of MVPs and what was prioritized at which points in time. We can see that there is a significant dip between the mid 2000s and the mid 2010s when we look at Historical Data and simulated MVPs there is a lack of 'Big Men', Centers and Power Forwards, as they are often the players with the most rebounds on a given team especially until the late 2010s, when smaller players such as Russell Westbrook Began recording more more rebounds. During this time there seems to be a vacuum of elite big men, from Shaquille O'neal, Tim Duncan, and Kevin Garnett in the early 2000s to the void we see above until the late 2010s and early 2020s where Giannis Antetekumpo, Nikola Jokic, and Joel Embiid rose to power and one of the three previously mentioned players won the MVP award in the last 6 years, which is why we can see the big jump in rebounds in the last few years of the graphs.


## APG since 1986

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-ast
#| fig-cap: "MVP ASG over Time"

print(ast_plot)
```

Lastly we will be looking at @fig-ast in which we graph assists per game over time since 1986. Just as in @fig-reb we have a dip in assists per game among MVPs and Simulated MVPs in which the assists per game in the 1990s and the early 2000s, where big men, while know for their rebounds and not so much for their assists were dominating the league. While we see a gradual increase in the 2020s and 2020s with the small outlier of Joel Embiid in 2023. After looking at these last few visuals we can come to the conclusion that each of these statistics seem to have a somewhat of a growing trend whether consistent or not it does seem to exists, we can come to the conclusions that MVPs in the modern NBA are more likely to be selected if they are a well rounded player, a player that score a lot of points, rebound the ball, and be an unselfish player by by passing the ball a lot especially in scoring situations.




# Discussion {#sec-discussion}

## Human Error and Bias {#sec-bias}

We must remember that at the end of the day the MVP is selected by a group of NBA analysts that come together once a year and cast their ballot for who they think the MVP should be. We must also remember that the award is called the 'Most Valuable Player' Award and not the 'Best Player' Award indicating that the player that should be selected is more valuable to their team than any other player. As people are deciding the player to receive these awards, it is good as they are able to take into account quantifiable and intangibles that machines would not, such as leadership, teammate morale, on-court behavior, off-court behavior and many more attributes that could affect their vote, as a machine would likely create a and MVP Index not completely unlike ours and choose the highest or lowest number depending on how it is measured.On the other hand, humans are extremely prone to bias, for example Stephen Curry was named the first unanimous  MVP in 2016 when he received all 131 votes cast that year, while in 2013 LeBron James received 120 out of 121 votes, the last vote went to Carmelo Anthony, who did not have a bad year by any means, but LeBron's Greatness that year was undeniable. Lebron's incredible statistical performance that year was one thing to behold, but he would go on to win his second NBA championship against one the most put together teams ever assembled. This shows that no matter how uncorrupt and trust worthy a set of analysts may seem they are human at the end of the day and are prone to error at the least and bias at the worst.

Sometimes choosing an mvp that would make a good story and in utn make the NBA more money also occasionally happens, for example when derrick rose won the MVP award in 2011 few people would make the statement that he was the best player in the world, as in almost every statistical category Lebron James was superior and Lebron's team, the Miami Heat, had more playoff success that year. An additional point, Derrick rose was the home town hero in Chicago, after growing in the windy city he was drafted by his hometown team, and attempted to regain the success the team had in the !990s with Michael Jordan. This makes an incredible story.

## Consistency vs. Peak Performance {#sec-peak}

Averages do not show everything. It is possible for a player to be incredibly inconsistent for their team, playing well against weaker opponents while struggling against stronger ones. This could lead to impressive average stats that fail to reflect their performance when the team needed them most. On the other hand, peak performance, where a player dominates in key moments, often captures attention and can overshadow an otherwise inconsistent season. The MVP debate often centers around this tension between reliability and brilliance.A player who delivers steady, high-level contributions throughout the season provides a reliable foundation for their team’s success. These players might not always have headline-grabbing moments, but their ability to perform well in nearly every game can be the difference between making the playoffs or falling short. Their contributions build trust among teammates and coaches, as they can be relied upon to deliver in critical situations time and time again.

In contrast, players who showcase moments of sheer brilliance often become the face of the league. These athletes might not exhibit the same game-to-game reliability, but their ability to dominate in spectacular fashion leaves a lasting impression on fans and voters alike. Peak performers can change the momentum of a season with game-winning shots, record-breaking performances, or memorable battles against top opponents. However, their inconsistency can leave teams vulnerable during less-publicized matchups or critical stretches of the season.Ultimately, the MVP conversation remains an evolving debate, shaped by both quantitative measures and subjective interpretations of what makes a player "most valuable."


## Voting Methodology and Transparency {#sec-method}

The voting methodology and transparency in the NBA, particularly for awards like the MVP, have significant implications for the league’s credibility and fan engagement. The MVP award is determined by a panel of sportswriters and broadcasters from the United States and Canada, with each voter ranking their top five candidates. Points are assigned on a weighted scale, and the player with the highest total is named MVP. While this system allows for expert analysis, transparency remains a recurring discussion point. Critics often call for more public access to the detailed ballots to ensure accountability and minimize potential biases. The NBA has made strides in recent years by releasing voters’ choices post-award, fostering a culture of openness. However, debates about the inclusion of diverse perspectives, potential regional biases, and the weight given to narrative versus statistical performance continue to shape the conversation around fairness and transparency in the voting process.

## Weaknesses and next steps {#sec-weak}

First, what would have been ideal especially in terms of using our model, would have been to take players from the all 3 All NBA teams, and download the data from these players and have our model analyze the data so we would have an actual name of a player for our predicted MVP Index and not just the score. While this would have been great time constraints and other external factors hindered us from implementing this further analysis.

Second, for a more accurate MVP Index we could have sampled the entire league instead of the top 20-30 players, as this would have made a more accurate model as well as made the great players look much more exceptional with regards to the MVP Index, as we have only sampled players who have received at least one vote for an All NBA team, this leads to the average statistics we used to normalize our stats. This ended up making the Phenomenal players look great, and the great players look average, and the good players look sub par. 

Next, team records are also incredibly important for MVP, if a player played incredibly one season but barely made the playoffs, or even did not at all, the player likely should not be receiving the MVP award, as how much worse could said team get if they weren't that good with the so called "best" player in the league. Unfortunately we were notable to inclue team record, team win percentage, or even player win percentage if we do not want to include the games a player may have missed. Unfortunately this data was not included in either type of data set that we sourced from [@bbref], and due to time constraints downloading potentially dozens if not hundreds additional data sets did not seem to be the best use of time in our case.

Lastly, as mentioned in @sec-bias the MVP award does not solely rely on statistics and quantifiable factors. While, stats are heavily used in the decision for choosing the MVP there are other. non tangible factors that must be taken into account, other wise incredibly selfish players who do not help their teams have a much higher chance of winning.

Our next steps, would like be to monitor this NBA season closely potentially add some of the data mentioned earlier in @sec-weak, such as win percentage, and individual historical statistics to more accurate predict the model. We would also like to revisit this paper tat the end of this NBA season once the NBA awards are announced and see how we could improve our model and how accurate it was in predicting the MVP Index of the next MVP.

\newpage

\appendix

# Appendix {.unnumbered}

# Surveys, Sampling, and Observational Data

## Overview of MVP Voting Methodology

The MVP award voting process relies on a panel of sportswriters and broadcasters across the United States and Canada, with each voter ranking their top five players. The point system allocates 10 points for a first-place vote, 7 for second, 5 for third, 3 for fourth, and 1 for fifth. The player with the highest total points is named the MVP. While this system ensures broad coverage across media markets, it introduces potential biases rooted in the selection of voters, the weighting system, and the lack of transparency in the criteria used by individual voters. [@schmitz]

## Observational Nature of NBA Data

MVP voting data is inherently observational, reflecting subjective decisions rather than controlled experiments. This reliance on subjective assessments introduces variability, as voters may prioritize narrative driven criteria such as team success, leadership, or memorable moments over statistical performance. Observational data like this cannot account for unmeasured factors, such as voters’ implicit biases or media-driven narratives. Additionally, players on historically successful teams or those in larger markets may receive disproportionate attention, skewing the outcomes.

## Sampling Representation of Voters

The panel of voters is not a random sample of all stakeholders in the NBA community. Instead, it is a curated group of media professionals, which may underrepresent certain perspectives, such as fans, coaches, or analytics experts. This introduces a potential sampling bias that could influence the results. For example, regional biases might favor players from large-market teams, while recency bias could elevate players with late-season surges. Simulation studies could explore the extent of these biases by randomly reweighting votes or introducing new voter segments, e.g., analytics specialists.

##Simulation of MVP Voting Under Different Scenarios

To examine the robustness of MVP outcomes, simulations were conducted to evaluate how changes to the voting methodology could influence results. For instance, adjusting the weight given to statistical performance in vote tallies revealed several seasons where the MVP Index-aligned winner differed from the historically selected MVP. Similarly, experimenting with alternative weighting schemes, such as assigning equal points for all top-five rankings instead of a tiered system, led to notable shifts in the final outcomes. These simulations highlight the significant role that methodological choices play in shaping MVP selections, showing that even small adjustments can result in different winners. By simulating different voting scenarios, it becomes clear that the current system is sensitive to how votes are counted and weighted, underscoring the need for transparency and careful consideration of methodology.

# Table By MVP Index {#sec-index}

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false

print(mvp_table)
```

# Historical MVPs

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false

Real_MVP_Datas <- Real_MVP_Data[-c(1, nrow(Real_MVP_Data)), ]

write.csv(Real_MVP_Datas, "../data/02-analysis_data/Real_MVP_Datas.csv", row.names = FALSE)

print(Real_MVP_Datas)
```



# Model details {#sec-model-details}

```{r}
#| include: true
#| warning: false
#| message: false
#| echo: false
lm_summary <- summary(lm_model)

print(lm_summary)
```







\newpage

# References
